is_repeated_guest +
lead_time_squared +
market_segment +
prior_cancellation +
length_stayCent +
(season * adrCent) +
(season * lead_time_squared) +
(hotel * adrCent) +
(changed * lead_time_squared),
data = hotels_subset,
family = binomial)
tidy(canceled_m, conf.int=TRUE, exponentiate=FALSE) %>%
kable(format="markdown", digits=3)
BIC_model <- step(canceled_m,
direction = "backward",
k = log1p(10000)
)
tidy(BIC_model, conf.int=TRUE, exponentiate=FALSE) %>%
kable(format="markdown", digits=3)
select_model_aic <- step(canceled_m,
direction = "backward",
criterion = "AIC"
)
tidy(select_model_aic, exponentiate = FALSE) %>%
kable(format = "markdown", digits = 3)
# calculating predictions and residuals
canceled_m_aug_aic <- augment(select_model_aic, type.predict = "response", type.residuals = "response")
canceled_m_aug_aic <- canceled_m_aug_aic %>%
mutate(obs_num = 1:n())
# ROC from select_model
roc_curve_aic <- ggplot(canceled_m_aug_aic,
aes(d = as.numeric(is_canceled) - 1,
m = .fitted)) +
geom_roc(n.cuts = 10, labelround = 3) +
geom_abline(intercept = 0) +
labs(x = "False Positive Rate (1 - Specificity)",
y = "True Positive Rate (Sensitivity)")
# calculate auc
auc_aic <- calc_auc(roc_curve_aic)$AUC
# model comparison with AIC
glance(select_model)$AIC
glance(select_model_aic)$AIC
# model comparison with BIC
glance(select_model)$BIC
glance(select_model_aic)$BIC
data_ctrl <- trainControl(method = "cv", number = 10)
model_caret <- train(is_canceled ~
adr +
infants +
adults +
season +
changed +
origin +
hotel +
is_repeated_guest +
lead_time_squared +
market_segment +
prior_cancellation +
length_stay +
(lead_time_squared * changed) +
(season * adr) +
(hotel * adr) +
(season * lead_time_squared),   # model to fit
data = hotels_small,
trControl = data_ctrl,              # folds
method = "glm",                      # specifying regression model
na.action = na.pass)
library(tidyverse)
library(broom)
library(knitr)
library(patchwork)
library(GGally)
library(MASS)
library(pROC)
library(plotROC)
library(dplyr)
library(modelr)
library(caret)
library(leaps)
library(StepReg)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
# load the data
hotels <- read_csv("data/hotel_bookings.csv")
hotels <- hotels %>%
mutate(
is_canceled = as.factor(is_canceled),
adr = as.numeric(adr),
hotel = as.factor(hotel),
numinfants = (children + babies),
numinfants = as.integer(numinfants),
numinfants = case_when(
is.na(numinfants) ~ 0,
TRUE ~ as.numeric(numinfants)
),
infants = case_when(
numinfants > 0 ~ "yes",
numinfants == 0 ~ "no"
),
infants = as.factor(infants),
length_stay = (stays_in_weekend_nights + stays_in_week_nights),
length_stay = as.integer(length_stay),
origin = case_when(
country == "PRT" ~ "domestic",
TRUE ~ "international"),
is_repeated_guest = as.factor(is_repeated_guest),
season = case_when(
arrival_date_month == "January" | arrival_date_month == "February" |
arrival_date_month == "December" ~ "Winter",
arrival_date_month == "March" | arrival_date_month == "April" |
arrival_date_month == "May" ~ "Spring",
arrival_date_month == "June" | arrival_date_month == "July" |
arrival_date_month == "August" ~ "Summer",
arrival_date_month == "September" | arrival_date_month == "October" |
arrival_date_month == "November" ~ "Fall"),
season = fct_relevel(season, "Spring", "Summer", "Fall", "Winter"),
lead_time_squared = `^`(lead_time,2),
changed = case_when(
booking_changes > 0 ~ "yes",
booking_changes == 0 ~ "no"
),
changed = as.factor(changed),
prior_cancellation = case_when(
previous_cancellations > 0 ~ "yes",
previous_cancellations == 0 ~ "no"
),
prior_cancellation = as.factor(prior_cancellation)
) %>%
filter(market_segment != "Undefined")
hotels_small <- subset(hotels,
select = -c(country, agent, company, arrival_date_year, arrival_date_month,
arrival_date_week_number, arrival_date_day_of_month, children,
meal, distribution_channel, previous_bookings_not_canceled,
reserved_room_type, assigned_room_type, days_in_waiting_list,
customer_type, required_car_parking_spaces, total_of_special_requests,
reservation_status, stays_in_weekend_nights, stays_in_week_nights, numinfants,
previous_cancellations, booking_changes))
# plot number of booking changes
p1 <- ggplot(hotels_small, mapping = aes(x = is_canceled)) +
geom_bar() +
labs(x = "Canceled?", y = "Count", title = "Cancellations")
# summarize number of booking changes
p1 + gridExtra::tableGrob(hotels_small %>%
count(is_canceled) %>%
mutate(n = n, prop = n/sum(n)))
# plot average daily rate
p1 <- ggplot(hotels_small, mapping = aes(x = adr)) +
geom_histogram(binwidth = 50) +
labs(x = "Average Daily Rate", y = "Count", title = "Average Daily Rate")
# summarize average daily rate
p1 / gridExtra::tableGrob(hotels_small %>%
summarize(min = min(adr), q1 = quantile(adr, 0.25), median = median(adr),
q3 = quantile(adr, 0.75), max = max(adr), IQR = IQR(adr),
loweroutlier = (q1 - 1.5*IQR), upperoutlier = (q3 + 1.5*IQR)))
# plot lead time
p1 <- ggplot(hotels_small, mapping = aes(x = lead_time)) +
geom_histogram(binwidth = 10) +
labs(x = "Days between Booking and Check-In", y = "Count",
title = "Lead Time before Check-In")
# summarize lead time
p1 / gridExtra::tableGrob(hotels_small %>%
summarize(min = min(lead_time), q1 = quantile(lead_time, 0.25),
median = median(lead_time), q3 = quantile(lead_time, 0.75),
max = max(lead_time), IQR = IQR(lead_time),
loweroutlier = (q1 - 1.5*IQR), upperoutlier = (q3 + 1.5*IQR)))
# plot prior cancellation
p1 <- ggplot(hotels_small, mapping = aes(x = prior_cancellation)) +
geom_bar() +
labs(x = "Prior Cancellation", y = "Count",
title = "Prior Cancellation before Booking")
# summarize previous cancellations
p1 + gridExtra::tableGrob(hotels_small %>%
count(prior_cancellation) %>%
mutate(n = n, prop = n/sum(n)))
# plot which hotel
p1 <- ggplot(hotels_small, mapping = aes(x = hotel)) +
geom_bar() +
labs(x = "Type of Hotel", y = "Count", title = "City vs. Resort Hotel")
# count which hotel
p1 + gridExtra::tableGrob(hotels_small %>%
count(hotel) %>%
mutate(n = n, prop = n/sum(n)))
# plot market segment
p1 <- ggplot(hotels_small, mapping = aes(x = market_segment)) +
geom_bar() +
labs(x = "Market Segment Designation", y = "Count",
title = "Market Segment Guest Designations")
# count market segment
p1 + gridExtra::tableGrob(hotels_small %>%
count(market_segment) %>%
mutate(n = n, prop = n/sum(n)))
p1 <- ggplot(hotels_small, aes(x= is_canceled, y = lead_time)) +
geom_boxplot(fill = "darkorange") +
labs(x = "Is Canceled", y = "Lead Time (Days)",
title = "Cancellation vs. Lead Time", subtitle = "Boxplots") +
ylim(-1,365)
#p2 <- ggplot(hotels_small, aes(lead_time)) +
#  geom_histogram() +
#  facet_wrap(vars(is_canceled), scales = "free_y")
p3 <- ggplot(hotels_small, aes(x=lead_time, fill = is_canceled)) +
geom_density(alpha = .5) +
labs(fill = "Is Canceled", x = "Lead Time (Days)", y = "Density",
title = "Cancellation vs. Lead Time", subtitle = "Density Plot") +
xlim(-1,365)
#p1 + (p2 / p3)
p1+p3
ggplot(hotels_small, aes(x=market_segment, fill=is_canceled)) +
geom_bar(position="fill") +
labs(x = "Market Segment Designation", y = "Proportion",
title = "Cancellation vs. Market Segment", fill = "Is Canceled")
# adr
p1 <- ggplot(hotels_small, mapping = aes(x = adr)) +
geom_histogram(binwidth = 50, fill = "aquamarine4") +
facet_wrap(vars(is_canceled)) +
labs(x = "Average Daily Rate (Euros)", y = "Count", title = "Average Daily Rate (Euros)") +
xlim(0,212)
# prior cancellation
p2 <- ggplot(hotels_small, mapping = aes(x = prior_cancellation, fill = is_canceled)) +
geom_bar(position = "fill")  +
labs(x = "Prior Cancellation", y = "Proportion", title = "Prior Cancellation")
#booking changes.
p3 <- ggplot(hotels_small, mapping = aes(x = changed, fill = is_canceled)) +
geom_bar(position = "fill")  +
labs(x = "Booking Changed", y = "Proportion", title = "Booking Changed")
p1 + p2 / p3
# filter outliers
hotels_small <- hotels_small %>%
filter(adr < 211.06,
adults <= 10 & adults >= 1,
market_segment != "Undefined",
lead_time <= 365,
)
# mean center relevant variables
hotels_small <- hotels_small %>%
mutate(
adultsCent = adults - median(adults),
adrCent = adr - mean(adr),
length_stayCent = length_stay - mean(length_stay)
)
set.seed(10081999)
hotels_subset <- sample_n(hotels_small, 10000) %>%
mutate(obs_num = 1:n())
#glimpse(hotels_subset)
select_model <- glm(is_canceled ~
adrCent +
season +
changed +
origin +
hotel +
is_repeated_guest +
market_segment +
prior_cancellation +
length_stayCent,
data = hotels_subset,
family = binomial)
tidy(select_model, conf.int=TRUE, exponentiate=FALSE) %>%
kable(format="markdown", digits=3)
# calculating predictions and residuals
canceled_m_aug <- augment(select_model, type.predict = "response", type.residuals = "response")
canceled_m_aug <- canceled_m_aug %>%
mutate(obs_num = 1:n())
#predicted probabilities
pred_probs_binned <- arm::binnedplot(x = canceled_m_aug$.fitted, y = canceled_m_aug$.resid,
xlab = "Predicted Probabilities",
main = "Binned Residual vs. Predicted Values",
col.int = FALSE)
#adr
adr_binned <- arm::binnedplot(x = canceled_m_aug$adrCent,
y = canceled_m_aug$.resid,
col.int = FALSE,
xlab = "Average Daily Rate",
main = "Binned Residual vs. Average Daily Rate")
#length_stay
length_stay_binned <- arm::binnedplot(x = canceled_m_aug$length_stayCent,
y = canceled_m_aug$.resid,
col.int = FALSE,
xlab = "Length of Stay (Days)",
main = "Binned Residual vs. Length of Stay")
t1<-canceled_m_aug %>%
group_by(season) %>%
summarise(mean_resid = mean(.resid))
t2<-canceled_m_aug %>%
group_by(origin) %>%
summarise(mean_resid = mean(.resid))
t3<-canceled_m_aug %>%
group_by(hotel) %>%
summarise(mean_resid = mean(.resid))
t4<-canceled_m_aug %>%
group_by(market_segment) %>%
summarise(mean_resid = mean(.resid))
t5<-canceled_m_aug %>%
group_by(prior_cancellation) %>%
summarise(mean_resid = mean(.resid))
t6<-canceled_m_aug %>%
group_by(changed) %>%
summarise(mean_resid = mean(.resid))
kable(list(t2, t3))
kable(list(t5, t6))
kable(list(t4, t1))
joined <- inner_join(hotels_subset, canceled_m_aug, by = "obs_num")
ggplot(data = joined, aes(x = reservation_status_date, y = .resid)) +
geom_point(alpha = 0.1) +
labs(x = "Date of Booking", y = "Residuals",
title = "Residuals vs. Date of Booking")
# ROC from select_model
roc_curve <- ggplot(canceled_m_aug,
aes(d = as.numeric(is_canceled) - 1,
m = .fitted)) +
geom_roc(n.cuts = 10, labelround = 3) +
geom_abline(intercept = 0) +
labs(x = "False Positive Rate (1 - Specificity)",
y = "True Positive Rate (Sensitivity)")
roc_curve
# calculate auc
(auc <- calc_auc(roc_curve)$AUC)
# plot number of adults per booking
p1 <- ggplot(hotels_small, mapping = aes(x = adults)) +
geom_histogram(binwidth = 1) +
labs(x = "Number of Adults", y = "Count", title = "Adults per Booking")
p2 <- ggplot(hotels_small, mapping = aes(x = infants)) +
geom_bar() +
labs(x = "Infants", y = "Count",
title = "Infants per Booking")
# summarize number of adults per booking
p1 / gridExtra::tableGrob(hotels_small %>%
summarize(min = min(adults), q1 = quantile(adults, 0.25), median = median(adults),
q3 = quantile(adults, 0.75), max = max(adults), IQR = IQR(adults),
loweroutlier = (q1 - 1.5*IQR), upperoutlier = (q3 + 1.5*IQR)))
# plot number of infants
p1 <- ggplot(hotels_small, mapping = aes(x = infants)) +
geom_bar() +
labs(x = "Infants", y = "Count",
title = "Infants per Booking")
# summarize number of infants
p1 +gridExtra::tableGrob(hotels_small %>%
count(infants) %>%
mutate(n = n, prop = n/sum(n)))
# plot number of weekday nights
p1 <- ggplot(hotels_small, mapping = aes(x = length_stay)) +
geom_histogram(binwidth = 1) +
labs(x = "Length of Stay (Days)", y = "Count",
title = "Length of Stay")
# summarize number of weekday nights
p1 / gridExtra::tableGrob(hotels_small %>%
summarize(min = min(length_stay), q1 = quantile(length_stay, 0.25),
median = median(length_stay), q3 = quantile(length_stay, 0.75),
max = max(length_stay), IQR = IQR(length_stay),
loweroutlier = (q1 - 1.5*IQR), upperoutlier = (q3 + 1.5*IQR)))
# plot repeated guest
p1 <- ggplot(hotels_small, mapping = aes(x = is_repeated_guest)) +
geom_bar() +
labs(x = "Is a Repeated Guest", y = "Count", title = "Repeated Guests")
# count repeated guest
p1 + gridExtra::tableGrob(hotels_small %>%
count(is_repeated_guest) %>%
mutate(n = n, prop = n/sum(n)))
# plot domestic vs international
p1 <- ggplot(hotels_small, mapping = aes(x = origin)) +
geom_bar() +
labs(x = "Origin of Guest", y = "Count", title = "Domestic vs. International Guests")
# count domestic vs international
p1 + gridExtra::tableGrob(hotels_small %>%
count(origin) %>%
mutate(n = n, prop = n/sum(n)))
# plot season
p1 <- ggplot(hotels_small, mapping = aes(x = season)) +
geom_bar() +
labs(x = "Season of Check-in", y = "Count", title = "Season of Check-In")
# count season
p1 + gridExtra::tableGrob(hotels_small %>%
count(season) %>%
mutate(n = n, prop = n/sum(n)))
# plot number of booking changes
p1 <- ggplot(hotels_small, mapping = aes(x = changed)) +
geom_bar() +
labs(x = "Booking Changed", y = "Count", title = "Changed")
# summarize number of booking changes
p1 + gridExtra::tableGrob(hotels_small %>%
count(changed) %>%
mutate(n = n, prop = n/sum(n)))
p1 <- ggplot(hotels_small, aes(adults, fill = is_canceled)) +
geom_histogram(position = "fill", binwidth = 5) +
labs(x = "Number of Adults per Booking", y = "Proportion",
title = "Cancellation vs. Adults", fill = "Is Canceled")
p2 <- ggplot(hotels_small, aes(infants, fill = is_canceled)) +
geom_bar(position="fill") +
labs(x = "Infants", y = "Proportion",
title = "Cancellation vs. Infants", fill = "Is Canceled")
p1 + p2
ggplot(hotels_small, aes(length_stay)) +
geom_histogram(binwidth = 1, fill= "darkorange") +
facet_wrap(vars(is_canceled)) +
xlim(-1,10) +
labs(x = "Length of Stay (Days)", y = "Count",
title = "Cancellation vs. Length of Stay")
# origin
p1 <- ggplot(hotels_small, mapping = aes(x = origin, fill = is_canceled)) +
geom_bar(position = "fill") +
labs(x = "Is Canceled", y = "Proportion", title = "Cancellation vs. Origin")
# repeated guest
p2 <- ggplot(hotels_small, mapping = aes(x = is_repeated_guest, fill = is_canceled)) +
geom_bar(position = "fill") +
labs(x = "Is Repeated Guest", y = "Proportion", title = "Cancellation vs. Is Repeated Guest")
# type of hotel
p3 <- ggplot(hotels_small, mapping = aes(x = hotel, fill = is_canceled)) +
geom_bar(position = "fill") +
labs(x = "Hotel Type", y = "Proportion", title = "Cancellation vs. Hotel Type")
p1 + (p2/p3)
ggplot(hotels_small, aes(x=season, fill=is_canceled)) +
geom_bar(position="fill") +
scale_fill_brewer(palette="Reds") +
theme_classic() +
labs(x = "Season", y = "Propotion", fill = "Is Cancelled",
title = "Cancellation vs. Season")
p1 <- ggplot(hotels_subset, aes(x = changed, y = lead_time)) +
geom_boxplot() +
coord_flip() +
labs(title = "Changed vs. Lead Time", y = "Lead Time (Days)") +
ylim(0, 365)
p2 <- ggplot(hotels_subset, aes(x = season, y = adr)) +
geom_boxplot() +
coord_flip() +
labs(title = "Season vs Average Daily Rate", y = "Average Daily Rate") +
ylim(0, 212)
p3 <- ggplot(hotels_subset, aes(x = hotel, y = adr)) +
geom_boxplot() +
coord_flip() +
labs(title = "Hotel Type vs Average Daily Rate", y = "Average Daily Rate") +
ylim(0, 1000)
p4 <- ggplot(hotels_subset, aes(x = season, y = lead_time)) +
geom_boxplot() +
coord_flip() +
labs(title = "Season vs Lead Time", y = "Lead Time (days)")
par(mfrow = c(2,2))
p1 + p2 + p3 + p4
canceled_m <- glm(is_canceled ~
adrCent +
adultsCent +
season +
infants +
changed +
origin +
hotel +
is_repeated_guest +
lead_time_squared +
market_segment +
prior_cancellation +
length_stayCent +
(season * adrCent) +
(season * lead_time_squared) +
(hotel * adrCent) +
(changed * lead_time_squared),
data = hotels_subset,
family = binomial)
tidy(canceled_m, conf.int=TRUE, exponentiate=FALSE) %>%
kable(format="markdown", digits=3)
BIC_model <- step(canceled_m,
direction = "backward",
k = log1p(10000)
)
tidy(BIC_model, conf.int=TRUE, exponentiate=FALSE) %>%
kable(format="markdown", digits=3)
select_model_aic <- step(canceled_m,
direction = "backward",
criterion = "AIC"
)
tidy(select_model_aic, exponentiate = FALSE) %>%
kable(format = "markdown", digits = 3)
# calculating predictions and residuals
canceled_m_aug_aic <- augment(select_model_aic, type.predict = "response", type.residuals = "response")
canceled_m_aug_aic <- canceled_m_aug_aic %>%
mutate(obs_num = 1:n())
# ROC from select_model
roc_curve_aic <- ggplot(canceled_m_aug_aic,
aes(d = as.numeric(is_canceled) - 1,
m = .fitted)) +
geom_roc(n.cuts = 10, labelround = 3) +
geom_abline(intercept = 0) +
labs(x = "False Positive Rate (1 - Specificity)",
y = "True Positive Rate (Sensitivity)")
# calculate auc
auc_aic <- calc_auc(roc_curve_aic)$AUC
# model comparison with AIC
glance(select_model)$AIC
glance(select_model_aic)$AIC
# model comparison with BIC
glance(select_model)$BIC
glance(select_model_aic)$BIC
data_ctrl <- trainControl(method = "cv", number = 10)
model_caret <- train(is_canceled ~
adr +
infants +
adults +
season +
changed +
origin +
hotel +
is_repeated_guest +
lead_time_squared +
market_segment +
prior_cancellation +
length_stay +
(lead_time_squared * changed) +
(season * adr) +
(hotel * adr) +
(season * lead_time_squared),   # model to fit
data = hotels_small,
trControl = data_ctrl,              # folds
method = "glm",                      # specifying regression model
na.action = na.pass)
model_caret
model_caret$finalModel
summary(model_caret)
